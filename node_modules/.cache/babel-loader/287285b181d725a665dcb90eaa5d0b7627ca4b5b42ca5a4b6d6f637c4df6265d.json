{"ast":null,"code":"var _jsxFileName = \"/home/maverick/Desktop/ToDo List React/todo/src/Component/Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSquarePlus, faTrash, faPenToSquare } from '@fortawesome/free-solid-svg-icons';\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getlocalData() {\n  lov;\n}\nfunction Todo() {\n  _s();\n  const [Input, setInput] = useState(null);\n  const [InputList, setInputList] = useState([]);\n  const [Toggle, setToggle] = useState(true);\n  const [Edit, setEdit] = useState();\n\n  // function randomcolor(){\n  //     let chars=\"0123456789ABCDE\";\n  //     let hash=\"#\";\n  //     for(let i=0;i<6;i++){\n  //         hash+=chars[Math.floor(Math.random()*16)];\n  //     }\n  //     console.log(hash);\n  //     return hash;    \n  // }\n\n  useEffect(() => {\n    localStorage.setItem(\"list\", JSON.stringify(InputList));\n  }, [InputList]);\n  function deletedata(id) {\n    let afterDelete = InputList.filter(data => {\n      return data.id !== id;\n    });\n    setInputList(afterDelete);\n  }\n  function InputData() {\n    if (!Input) {\n      alert(\"Please enter something\");\n    } else if (Input && !Toggle) {\n      setInputList(InputList.map(elem => {\n        if (elem.id === Edit) {\n          return {\n            ...elem,\n            listData: Input\n          };\n        }\n        return elem;\n      }));\n      setToggle(true);\n      setInput(\"\");\n    } else {\n      let newData = {\n        id: new Date().getTime().toString(),\n        listData: Input\n      };\n      setInputList(data => {\n        return [...data, newData];\n      });\n    }\n    setInput(\"\");\n  }\n  function editData(id, name) {\n    // let afterEdit = InputList.find((data) => {\n    //     return data.id === id\n    // })\n\n    setToggle(false);\n    setInput(name);\n    setEdit(id);\n  }\n  console.log(InputList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ToDo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Please Enter here \\u270D\\uFE0F \",\n        value: Input,\n        onChange: e => {\n          setInput(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), Toggle ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faSquarePlus,\n        beat: true,\n        size: \"2xl\",\n        style: {\n          color: \"#53f80d\",\n          marginLeft: \"10px\",\n          backgroundColor: 'black'\n        },\n        onClick: InputData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faPenToSquare,\n        beat: true,\n        size: \"2xl\",\n        style: {\n          color: \"#c66210\",\n          marginLeft: \"10px\"\n        },\n        onClick: InputData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listValue\",\n      children: [InputList.length > 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: \"left\"\n        },\n        children: [\"Task Count:\", InputList.length, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 41\n      }, this) : \" \", InputList.map(value => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: value.listData\n          }, value.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash,\n            size: \"2xl\",\n            style: {\n              color: \"#f70814\"\n            },\n            onClick: () => {\n              deletedata(value.id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPenToSquare,\n            size: \"2xl\",\n            style: {\n              color: \"#c66210\",\n              marginLeft: '20px'\n            },\n            onClick: () => {\n              editData(value.id, value.listData);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n_s(Todo, \"sqP+jibAa47KEzuBD8GuMHD2Rv8=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faSquarePlus","faTrash","faPenToSquare","jsxDEV","_jsxDEV","Fragment","_Fragment","getlocalData","lov","Todo","_s","Input","setInput","InputList","setInputList","Toggle","setToggle","Edit","setEdit","localStorage","setItem","JSON","stringify","deletedata","id","afterDelete","filter","data","InputData","alert","map","elem","listData","newData","Date","getTime","toString","editData","name","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","icon","beat","size","style","color","marginLeft","backgroundColor","onClick","length","textAlign","_c","$RefreshReg$"],"sources":["/home/maverick/Desktop/ToDo List React/todo/src/Component/Todo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSquarePlus, faTrash, faPenToSquare } from '@fortawesome/free-solid-svg-icons';\nimport \"./style.css\";\n\nfunction getlocalData(){\n    lov\n}\n\nfunction Todo() {\n    const [Input, setInput] = useState(null);\n    const [InputList, setInputList] = useState([]);\n    const [Toggle, setToggle] = useState(true);\n    const [Edit, setEdit] = useState();\n\n    // function randomcolor(){\n    //     let chars=\"0123456789ABCDE\";\n    //     let hash=\"#\";\n    //     for(let i=0;i<6;i++){\n    //         hash+=chars[Math.floor(Math.random()*16)];\n    //     }\n    //     console.log(hash);\n    //     return hash;    \n    // }\n    \n    useEffect(()=>{\n\n        localStorage.setItem(\"list\", JSON.stringify(InputList));\n\n    },[InputList])\n\n    function deletedata(id) {\n        let afterDelete = InputList.filter((data) => {\n            return data.id !== id\n        })\n        setInputList(afterDelete);\n\n    }\n\n\n\n    function InputData() {\n        if (!Input) {\n            alert(\"Please enter something\");\n        }\n        else if (Input && !Toggle) {\n            \n            setInputList(\n                InputList.map((elem)=>{\n                    if(elem.id === Edit)\n                    {\n                        return {...elem, listData:Input}\n                    }\n                    return elem;\n                })\n               \n        )\n        setToggle(true);\n\n        setInput(\"\");\n        }\n        else {\n            let newData = {\n                id: new Date().getTime().toString(),\n                listData: Input\n            }\n            setInputList((data) => {\n                return [...data, newData]\n            })\n        }\n        setInput(\"\");\n\n    }\n    function editData(id,name) {\n        // let afterEdit = InputList.find((data) => {\n        //     return data.id === id\n        // })\n\n        setToggle(false);\n\n        setInput(name);\n\n        setEdit(id);\n    }\n\n\n    console.log(InputList);\n    return (\n\n        <div className='container'>\n            <h1>ToDo List</h1>\n            <div>\n                <input type='text' placeholder='Please Enter here ✍️ ' value={Input} onChange={(e) => { setInput(e.target.value) }} />\n                {Toggle ? <FontAwesomeIcon icon={faSquarePlus} beat size=\"2xl\" style={{ color: \"#53f80d\", marginLeft: \"10px\",backgroundColor:'black'\n                 }} onClick={InputData} /> :\n                    <FontAwesomeIcon icon={faPenToSquare} beat size=\"2xl\" style={{ color: \"#c66210\", marginLeft: \"10px\" }} onClick={InputData} />\n                }\n            </div>\n            <div className='listValue'>\n                {InputList.length > 0 ? <h3 style={{ textAlign: \"left\" }}>Task Count:{InputList.length} </h3> : \" \"}\n                {\n                    InputList.map((value) => {\n\n                        return (\n                            <>\n\n                                <div key={value.id}  >\n                                    {value.listData}\n                                </div>\n                                <FontAwesomeIcon icon={faTrash} size=\"2xl\" style={{ color: \"#f70814\", }} onClick={() => { deletedata(value.id); }} />\n                                <FontAwesomeIcon icon={faPenToSquare} size=\"2xl\" style={{ color: \"#c66210\", marginLeft: '20px' }} onClick={() => { editData(value.id,value.listData); }} />\n                            </>\n                        )\n\n                    })\n                }\n\n            </div>\n        </div>\n\n    )\n}\n\nexport default Todo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}